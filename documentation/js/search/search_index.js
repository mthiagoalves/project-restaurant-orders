var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.253,1,2.376]],["body/controllers/AppController.html",[0,1.904,1,3.61,2,1.471,3,0.245,4,0.214,5,0.214,6,3.495,7,0.493,8,1.689,9,4.523,10,4.108,11,4.69,12,1.385,13,0.023,14,0.617,15,4.108,16,1.305,17,1.03,18,0.574,19,1.03,20,5.894,21,1.23,22,0.524,23,0.806,24,3.495,25,3.369,26,3.495,27,2.348,28,1.16,29,4.108,30,0.245,31,0.19,32,1.563,33,1.563,34,4.108,35,1.893,36,3.495,37,4.108,38,4.108,39,1.385,40,4.108,41,0.017,42,0.017]],["title/modules/AppModule.html",[43,1.112,44,2.376]],["body/modules/AppModule.html",[1,3.607,2,1.658,3,0.199,4,0.174,5,0.174,13,0.023,22,0.556,23,0.656,25,3.561,26,2.843,30,0.199,31,0.154,41,0.015,42,0.015,43,1.688,44,4.781,45,1.442,46,1.442,47,1.649,48,1.649,49,1.442,50,2.62,51,1.649,52,2.843,53,2.843,54,2.843,55,3.865,56,3.865,57,2.688,58,3.865,59,3.865,60,3.865,61,2.284,62,1.649,63,1.649,64,3.342,65,2.647,66,3.342,67,3.342,68,3.342,69,3.342,70,3.342,71,3.342,72,3.342]],["title/injectables/AppService.html",[25,2,73,0.988]],["body/injectables/AppService.html",[3,0.258,4,0.225,5,0.225,7,0.52,8,1.747,9,4.677,13,0.023,14,0.65,16,1.375,17,1.085,18,0.605,19,1.085,21,1.296,22,0.364,23,0.849,25,3.142,30,0.258,31,0.2,36,4.677,39,1.46,41,0.018,42,0.018,73,1.552,74,1.994,75,3.682,76,5.497,77,1.458,78,4.328,79,3.142,80,6.041,81,3.682,82,4.328,83,4.328,84,4.328,85,3.682,86,4.328]],["title/controllers/AuthController.html",[0,1.253,87,2.376]],["body/controllers/AuthController.html",[0,1.166,2,1.166,3,0.194,4,0.169,5,0.169,7,0.391,8,1.445,12,1.533,13,0.023,14,0.683,16,1.445,17,1.14,18,0.636,19,1.14,21,1.362,22,0.544,23,0.639,27,1.861,28,0.919,30,0.194,31,0.15,32,1.239,33,1.239,39,1.912,41,0.015,42,0.015,87,3.087,88,2.77,89,2.02,90,2.77,91,4.266,92,3.868,93,2.77,94,3.833,95,3.255,96,4.546,97,3.255,98,2.599,99,3.255,100,2.115,101,3.255,102,3.255,103,3.255,104,2.02,105,2.211,106,2.02,107,2.82,108,2.02,109,2.994,110,2.77,111,2.82,112,3.25,113,2.77,114,2.02,115,2.77,116,2.77,117,2.02,118,1.318,119,2.02,120,2.211,121,3.255,122,2.77,123,3.255,124,3.255,125,3.255,126,2.82,127,3.255,128,3.255,129,2.02,130,2.77,131,3.255]],["title/modules/AuthModule.html",[43,1.112,55,2.171]],["body/modules/AuthModule.html",[2,1.759,3,0.217,4,0.189,5,0.189,13,0.023,22,0.549,23,0.715,30,0.217,31,0.168,41,0.016,42,0.016,43,1.765,45,1.573,46,1.573,47,1.798,48,1.798,49,1.573,50,2.74,51,1.798,55,4.222,57,2.759,61,2.423,62,1.798,63,1.798,65,2.808,87,3.773,109,3.655,110,3.1,132,3.1,133,3.644,134,3.1,135,3.967,136,3.644,137,3.644,138,2.261,139,3.644,140,3.644,141,2.261,142,3.644,143,3.644,144,2.261,145,2.261,146,1.798,147,3.644,148,3.644,149,3.1,150,3.644,151,3.644,152,3.644]],["title/injectables/AuthService.html",[73,0.988,109,2]],["body/injectables/AuthService.html",[3,0.184,4,0.16,5,0.16,7,0.37,8,1.391,13,0.023,14,0.658,16,1.391,17,1.098,18,0.612,19,1.098,21,0.924,22,0.525,23,0.606,30,0.184,31,0.142,32,1.175,33,1.667,35,2.018,39,1.041,41,0.014,42,0.014,73,1.236,74,1.422,91,3.295,93,3.725,94,3.768,98,2.503,100,1.985,109,2.503,113,2.626,114,1.915,115,2.626,116,2.626,119,1.915,153,2.626,154,2.909,155,1.764,156,1.764,157,2.108,158,6.246,159,3.086,160,2.503,161,3.086,162,2.626,163,3.295,164,1.635,165,2.626,166,2.323,167,2.934,168,3.157,169,2.717,170,2.909,171,3.295,172,2.503,173,1.773,174,4.378,175,1.915,176,1.915,177,4.378,178,3.086,179,3.295,180,3.086,181,1.422,182,2.626,183,3.086]],["title/classes/CreateOrderDto.html",[31,0.161,184,2.171]],["body/classes/CreateOrderDto.html",[3,0.201,4,0.175,5,0.175,7,0.405,12,1.8,13,0.023,14,0.802,18,0.895,22,0.484,28,0.952,30,0.201,31,0.246,41,0.015,42,0.015,77,1.035,79,3.453,184,2.89,185,0.952,186,4.331,187,2.537,188,1.48,189,3.748,190,5.337,191,4.102,192,3.372,193,3.372,194,4.658,195,1.571,196,2.593,197,2.869,198,3.372,199,2.092,200,2.839,201,4.658,202,3.372,203,2.839,204,2.869,205,2.146,206,4.658,207,3.505,208,3.372,209,2.839,210,3.963,211,3.163,212,2.663,213,2.869,214,4.658,215,1.663,216,1.283,217,2.29,218,2.869,219,2.161,220,3.372,221,2.537]],["title/classes/CreateOrderProductDto.html",[31,0.161,191,2.376]],["body/classes/CreateOrderProductDto.html",[3,0.209,4,0.182,5,0.182,7,0.421,12,1.838,13,0.023,14,0.819,18,0.762,22,0.402,28,0.99,30,0.209,31,0.221,41,0.015,42,0.015,77,1.3,185,0.99,186,4.404,188,1.521,189,2.97,191,3.25,195,1.614,196,2.668,199,2.177,200,3.119,203,2.361,204,2.985,209,2.887,210,4.072,211,3.25,212,2.736,213,4.072,215,1.731,219,2.206,222,2.382,223,5.212,224,4.635,225,4.635,226,4.787,227,4.787,228,3.508,229,3.508,230,2.206,231,4.787,232,4.787,233,4.787,234,4.787,235,4.787,236,2.985,237,4.787,238,4.072,239,3.508]],["title/classes/CreateProductDto.html",[31,0.161,240,2]],["body/classes/CreateProductDto.html",[3,0.168,4,0.146,5,0.146,7,0.338,12,1.986,13,0.023,14,0.885,17,1.524,18,0.824,22,0.345,28,0.795,30,0.168,31,0.189,41,0.013,42,0.013,77,1.384,185,0.795,188,1.303,196,2.285,199,3.294,200,3.26,203,2.619,207,3.085,209,2.998,211,3.283,212,3.226,215,1.39,219,2.702,222,1.913,230,3.1,236,2.397,238,2.397,240,2.344,241,5.171,242,3.226,243,4.246,244,4.801,245,4.1,246,2.817,247,4.1,248,2.817,249,5.31,250,5.31,251,2.397,252,4.1,253,2.817,254,2.817,255,2.817,256,4.1,257,2.817,258,4.1,259,3.488,260,2.817,261,4.113,262,2.817]],["title/classes/CreateTableDto.html",[31,0.161,263,2]],["body/classes/CreateTableDto.html",[3,0.265,4,0.231,5,0.231,7,0.534,12,1.5,13,0.023,14,0.668,18,0.622,22,0.47,30,0.265,31,0.258,41,0.018,42,0.018,185,1.256,188,1.777,200,2.759,203,3.38,205,2.577,207,4.208,209,2.759,211,3.798,215,2.194,219,1.801,251,3.784,261,4.758,263,3.197,264,4.758,265,3.347,266,4.447,267,4.447]],["title/classes/CreateUserDto.html",[31,0.161,268,2]],["body/classes/CreateUserDto.html",[3,0.149,4,0.13,5,0.13,7,0.301,12,1.974,13,0.023,14,0.88,17,1.347,18,0.819,22,0.316,28,0.707,30,0.149,31,0.174,41,0.012,42,0.012,77,1.464,91,3.774,92,3.198,100,2.05,167,2.391,168,3.632,169,3.821,185,0.707,188,1.195,199,2.8,200,3.249,209,2.97,212,3.226,215,1.236,219,2.37,242,2.58,268,2.149,269,5.122,270,1.885,271,4.513,272,3.396,273,2.131,274,3.759,275,4.267,276,2.505,277,2.505,278,5.015,279,3.759,280,3.759,281,3.774,282,3.198,283,2.505,284,5.015,285,3.198,286,2.505,287,2.505,288,3.759,289,3.759,290,2.505,291,3.759,292,3.759,293,2.505,294,2.505,295,3.759,296,3.759,297,2.505,298,2.505,299,3.759,300,3.759,301,2.505,302,3.759,303,3.198,304,3.198,305,2.505,306,3.759,307,2.505,308,2.505,309,2.505,310,2.131,311,2.505,312,2.505,313,2.505]],["title/classes/ErrorMiddleware.html",[31,0.161,314,2.633]],["body/classes/ErrorMiddleware.html",[3,0.22,4,0.192,5,0.192,7,0.443,8,1.574,11,2.778,13,0.023,14,0.555,16,1.173,17,0.926,18,0.516,19,0.926,21,1.106,22,0.31,23,0.724,30,0.22,31,0.17,35,2.754,41,0.016,42,0.016,79,2.11,106,2.29,173,1.495,185,1.042,281,4.498,314,3.728,315,3.141,316,4.215,317,5.592,318,4.059,319,4.955,320,5.592,321,5.977,322,3.692,323,5.977,324,2.507,325,5.592,326,3.141,327,3.141,328,3.692,329,3.692,330,3.692,331,3.692,332,5.592,333,3.692,334,3.692,335,3.692,336,3.692,337,3.692,338,3.692,339,3.074,340,3.692,341,3.692,342,3.692,343,3.692,344,3.692,345,3.692,346,3.692]],["title/injectables/JwtStrategy.html",[73,0.988,135,2.171]],["body/injectables/JwtStrategy.html",[3,0.211,4,0.184,5,0.184,7,0.424,8,1.528,13,0.023,14,0.722,16,1.528,17,1.205,18,0.821,19,1.205,21,1.057,22,0.493,23,0.693,30,0.211,31,0.163,32,1.344,33,1.344,35,1.627,39,1.191,41,0.015,42,0.015,73,1.357,74,1.627,77,0.784,100,1.865,118,1.43,130,3.003,135,2.982,146,1.741,149,3.003,154,3.125,155,2.018,156,2.018,157,2.234,160,2.748,162,4.09,164,1.87,167,2.547,170,2.018,171,2.656,172,2.018,173,1.43,175,2.19,179,2.656,181,1.627,326,3.003,347,3.003,348,4.807,349,3.53,350,4.807,351,4.807,352,3.53,353,3.53,354,3.53,355,3.53,356,3.003,357,3.53,358,2.19,359,3.53,360,3.53,361,3.53,362,3.53,363,3.53,364,3.003,365,3.53,366,3.53,367,3.003]],["title/classes/LoginDto.html",[31,0.161,94,2.171]],["body/classes/LoginDto.html",[3,0.215,4,0.187,5,0.187,7,0.432,12,1.861,13,0.023,14,0.829,18,0.772,22,0.409,28,1.016,30,0.215,31,0.225,41,0.016,42,0.016,77,1.415,94,3.021,100,2.024,167,2.924,168,4.041,169,3.834,185,1.016,188,1.547,200,3.142,209,2.917,212,3.381,215,1.775,219,2.235,275,4.143,281,3.664,282,4.143,285,4.143,303,4.143,304,4.143,310,3.061,368,3.061,369,3.598,370,3.598,371,3.598,372,3.598,373,3.598,374,3.598,375,4.869,376,3.598,377,4.869,378,4.869,379,5.519]],["title/classes/LoginResponseDto.html",[31,0.161,114,2.171]],["body/classes/LoginResponseDto.html",[3,0.248,4,0.216,5,0.216,7,0.499,12,1.806,13,0.023,14,0.805,18,0.749,22,0.45,28,1.173,30,0.248,31,0.192,41,0.017,42,0.017,77,1.19,90,4.555,100,2.172,114,3.322,119,2.577,146,2.641,182,5.041,185,1.173,188,1.701,200,2.641,209,2.923,219,2.168,259,4.555,273,4.555,380,5.041,381,3.533,382,5.354,383,5.354,384,4.153,385,4.153]],["title/classes/Order.html",[31,0.161,196,1.417]],["body/classes/Order.html",[3,0.217,4,0.189,5,0.189,7,0.436,13,0.023,14,0.981,18,0.913,19,1.754,22,0.466,30,0.217,31,0.168,41,0.016,42,0.016,77,1.319,79,3.171,100,2.03,119,2.254,185,1.025,188,1.557,189,3.441,195,1.871,196,1.985,205,2.944,230,2.556,386,3.09,387,3.441,388,3.441,389,4.032,390,3.632,391,3.632,392,3.632,393,4.901,394,3.632,395,3.632,396,3.632,397,3.632,398,3.632,399,3.632]],["title/controllers/OrderController.html",[0,1.253,400,2.376]],["body/controllers/OrderController.html",[0,0.943,2,0.943,3,0.157,4,0.137,5,0.137,7,0.316,8,1.24,12,1.734,13,0.023,14,0.773,16,1.477,17,1.165,18,0.65,19,1.165,21,1.54,22,0.514,23,0.517,27,1.505,28,0.743,30,0.157,31,0.122,32,1.002,33,1.002,39,1.734,41,0.012,42,0.012,77,1.277,89,1.634,100,1.827,104,2.884,107,2.421,108,1.634,111,2.421,112,3.406,117,1.634,118,1.066,119,1.634,120,1.788,122,2.24,126,3.189,129,1.634,172,1.505,173,1.883,176,2.421,184,3.189,195,2.061,196,2.328,216,1.957,400,2.65,401,1.981,402,2.633,403,2.536,404,1.925,405,3.32,406,2.633,407,3.238,408,1.788,409,2.633,410,1.981,411,3.902,412,2.633,413,1.299,414,1.981,415,2.633,416,2.24,417,3.189,418,1.981,419,2.067,420,2.633,421,1.788,422,1.788,423,2.657,424,2.24,425,1.299,426,3.32,427,1.299,428,1.981,429,2.633,430,2.633,431,2.633,432,1.788,433,1.788,434,2.633,435,2.633,436,2.633,437,1.788,438,2.633,439,2.633,440,2.936,441,1.981,442,2.633,443,2.633,444,2.633]],["title/modules/OrderModule.html",[43,1.112,56,2.171]],["body/modules/OrderModule.html",[2,1.869,3,0.238,4,0.208,5,0.208,13,0.023,22,0.538,23,0.783,30,0.238,31,0.184,41,0.017,42,0.017,43,1.847,45,1.723,46,1.723,47,1.969,48,1.969,49,1.723,50,2.867,51,1.969,56,4.206,57,2.832,61,2.574,62,1.969,63,1.969,65,2.983,118,1.617,138,2.477,141,2.477,144,2.477,145,2.477,146,1.969,400,3.947,423,3.751,424,3.396,445,3.396,446,3.992,447,3.396,448,3.992,449,3.992]],["title/injectables/OrderService.html",[73,0.988,423,2]],["body/injectables/OrderService.html",[3,0.112,4,0.098,5,0.098,7,0.226,8,0.956,13,0.024,14,0.707,16,1.366,17,1.51,18,0.601,19,1.078,21,1.288,22,0.443,23,0.369,30,0.112,31,0.087,32,0.715,33,0.715,35,1.386,39,1.45,41,0.01,42,0.01,73,0.849,74,0.866,77,1.254,79,2.688,100,1.494,155,1.074,156,1.074,157,1.636,160,2.15,164,0.996,167,1.993,184,2.667,189,2.918,195,1.953,196,0.761,203,2.32,205,2.167,216,1.145,221,5.241,223,3.658,224,1.599,225,3.658,230,1.981,242,2.458,243,3.235,403,2.121,404,1.484,405,2.559,407,2.791,413,1.484,416,2.559,417,2.667,423,1.72,425,0.927,426,2.559,427,0.927,450,1.599,451,1.88,452,3.008,453,1.88,454,3.008,455,1.88,456,1.88,457,1.88,458,1.414,459,1.074,460,1.074,461,1.276,462,1.88,463,1.88,464,5.57,465,1.88,466,3.194,467,1.88,468,3.008,469,1.88,470,1.88,471,1.88,472,1.88,473,1.88,474,1.88,475,1.88,476,1.88,477,1.276,478,1.88]],["title/modules/PrismaModule.html",[43,1.112,57,1.51]],["body/modules/PrismaModule.html",[3,0.26,4,0.227,5,0.227,13,0.022,22,0.464,23,0.856,30,0.26,31,0.201,41,0.018,42,0.018,43,1.927,45,1.882,46,1.882,47,2.151,48,2.151,49,1.882,50,2.99,51,2.99,57,2.944,61,2.725,62,2.151,63,2.151,157,2.703,479,3.711,480,3.711,481,3.711,482,4.362,483,4.362]],["title/injectables/PrismaService.html",[73,0.988,157,1.332]],["body/injectables/PrismaService.html",[3,0.272,4,0.237,5,0.237,7,0.547,8,1.804,13,0.023,14,0.685,21,1.364,22,0.477,23,0.894,30,0.272,31,0.21,41,0.018,42,0.018,73,1.603,74,2.099,154,3.535,157,2.161,170,2.604,316,3.875,358,3.522,458,3.428,484,3.875,485,6.184,486,6.791,487,4.555,488,4.555]],["title/classes/Product.html",[31,0.161,230,1.612]],["body/classes/Product.html",[3,0.223,4,0.194,5,0.194,7,0.449,13,0.022,14,1.017,17,1.411,18,0.947,19,1.615,30,0.223,31,0.173,41,0.016,42,0.016,77,1.519,185,1.056,188,1.588,195,1.899,196,2.28,203,2.964,219,2.28,230,2.303,242,3.218,243,4.236,244,4.789,387,3.493,388,3.493,389,4.08,489,3.182,490,3.741,491,3.741,492,3.741,493,3.741,494,3.741,495,3.741,496,3.741,497,3.741,498,3.741]],["title/controllers/ProductController.html",[0,1.253,499,2.376]],["body/controllers/ProductController.html",[0,0.926,2,0.926,3,0.154,4,0.134,5,0.134,7,0.31,8,1.223,12,1.837,13,0.023,14,0.819,16,1.619,17,1.277,18,0.712,19,1.277,21,1.631,22,0.48,23,0.507,27,1.478,28,0.73,30,0.154,31,0.119,32,0.984,33,0.984,39,1.718,41,0.012,42,0.012,77,1.38,89,1.604,104,2.388,105,1.755,106,1.604,107,2.388,108,1.604,111,2.388,112,3.543,117,1.604,118,1.047,126,3.379,129,1.604,173,1.559,176,2.388,181,2.51,189,2.388,195,2.191,216,1.939,217,2.614,230,2.8,240,2.912,324,1.755,403,2.513,404,1.899,407,3.025,408,1.755,410,1.945,413,1.275,414,1.945,418,1.945,419,2.699,421,1.755,422,1.755,425,1.275,427,1.275,432,1.755,433,1.755,437,1.755,499,2.614,500,2.199,501,2.585,502,1.604,503,2.585,504,1.478,505,2.199,506,2.585,507,2.585,508,2.585,509,1.478,510,3.161,511,2.585,512,2.629,513,2.199,514,2.585,515,2.585,516,2.585,517,2.585,518,1.945,519,2.585,520,1.945,521,2.585,522,1.945,523,1.945,524,1.945,525,2.585]],["title/modules/ProductModule.html",[43,1.112,58,2.171]],["body/modules/ProductModule.html",[2,1.873,3,0.239,4,0.208,5,0.208,13,0.023,22,0.538,23,0.786,30,0.239,31,0.185,41,0.017,42,0.017,43,1.85,45,1.729,46,1.729,47,1.976,48,1.976,49,1.729,50,2.872,51,1.976,57,2.834,58,4.21,61,2.58,62,1.976,63,1.976,65,2.99,118,1.622,138,2.485,141,2.485,144,2.485,145,2.485,146,1.976,499,3.954,512,3.754,513,3.408,526,3.408,527,3.408,528,4.006,529,4.006,530,4.006]],["title/injectables/ProductService.html",[73,0.988,512,2]],["body/injectables/ProductService.html",[3,0.128,4,0.111,5,0.111,7,0.257,8,1.06,13,0.023,14,0.861,16,1.761,17,1.437,18,0.775,19,1.389,21,1.66,22,0.446,23,0.421,30,0.128,31,0.099,32,0.816,33,0.816,35,2.131,39,1.79,41,0.011,42,0.011,73,0.942,74,0.988,77,1.458,98,3.44,154,3.56,155,1.225,156,1.225,157,1.76,160,1.908,164,1.136,166,3.084,170,2.865,172,2.343,173,1.66,175,1.33,181,1.538,195,2.03,196,0.868,216,1.27,217,2.266,230,1.888,240,2.644,318,1.456,339,1.33,403,2.281,404,1.646,407,2.812,413,1.646,419,1.768,425,1.057,427,1.057,459,1.225,460,1.225,461,1.456,466,3.141,477,2.266,502,2.071,504,1.908,509,1.908,510,2.87,512,1.908,531,1.824,532,2.511,533,3.337,534,2.144,535,2.144,536,2.144,537,2.144,538,2.511,539,2.144,540,2.144,541,3.337,542,2.144,543,2.144,544,1.613,545,1.613,546,2.144,547,1.613,548,4.098,549,2.144,550,1.824,551,1.824,552,2.144,553,1.456,554,1.613,555,1.613,556,1.613,557,1.613,558,3.084,559,2.144,560,2.144,561,3.084,562,2.144,563,2.144,564,2.144,565,1.613,566,2.144,567,2.144,568,2.144,569,2.144]],["title/classes/Table.html",[31,0.161,205,1.612]],["body/classes/Table.html",[3,0.262,4,0.229,5,0.229,7,0.528,13,0.022,14,0.961,18,0.894,19,1.687,30,0.262,31,0.203,41,0.018,42,0.018,77,1.233,185,1.241,188,1.764,195,2.052,203,3.251,205,2.558,387,3.775,388,3.775,389,4.34,570,3.74,571,4.396,572,4.396,573,4.396,574,4.396]],["title/controllers/TableController.html",[0,1.253,575,2.376]],["body/controllers/TableController.html",[0,0.899,2,0.899,3,0.15,4,0.131,5,0.131,7,0.301,8,1.197,12,1.814,13,0.023,14,0.808,16,1.595,17,1.259,18,0.702,19,1.259,21,1.611,22,0.492,23,0.493,27,1.435,28,0.709,30,0.15,31,0.116,32,0.955,33,0.955,39,1.693,41,0.012,42,0.012,77,1.369,89,1.558,98,3.444,104,2.336,105,1.705,106,1.558,107,2.336,108,1.558,111,2.336,112,3.504,117,1.558,118,1.017,126,3.338,129,1.558,173,1.525,176,2.336,181,2.479,195,2.177,205,2.839,216,1.911,263,2.87,324,1.705,403,2.477,404,1.857,407,2.993,408,1.705,410,1.889,413,1.238,414,1.889,418,1.889,419,2.66,421,1.705,422,1.705,425,1.238,427,1.238,432,1.705,433,1.705,437,1.705,502,1.558,504,1.435,505,2.136,509,1.435,518,1.889,520,1.889,522,1.889,523,1.889,524,1.889,575,2.557,576,2.136,577,2.51,578,2.51,579,2.51,580,3.204,581,2.51,582,2.51,583,3.115,584,2.51,585,2.583,586,2.136,587,2.833,588,2.136,589,2.51,590,2.51,591,2.51,592,2.51,593,2.51,594,2.51,595,2.51]],["title/modules/TableModule.html",[43,1.112,59,2.171]],["body/modules/TableModule.html",[2,1.847,3,0.234,4,0.204,5,0.204,13,0.023,22,0.549,23,0.77,30,0.234,31,0.181,41,0.016,42,0.016,43,1.832,45,1.693,46,1.693,47,1.935,48,1.935,49,1.693,50,2.843,51,1.935,57,2.818,59,4.191,61,2.544,62,1.935,63,1.935,65,2.949,118,1.588,138,2.434,141,2.434,144,2.434,145,2.434,146,1.935,157,1.493,164,2.078,575,3.914,585,3.733,586,3.337,596,3.337,597,3.337,598,3.922,599,3.922,600,3.922]],["title/injectables/TableService.html",[73,0.988,585,2]],["body/injectables/TableService.html",[3,0.136,4,0.118,5,0.118,7,0.273,8,1.111,13,0.023,14,0.851,16,1.729,17,1.364,18,0.761,19,1.364,21,1.629,22,0.457,23,0.447,30,0.136,31,0.105,32,0.867,33,0.867,35,2.201,39,1.738,41,0.011,42,0.011,73,0.987,74,1.049,77,1.404,98,3.498,154,3.611,155,1.302,156,1.302,157,1.818,160,1.999,164,1.207,170,2.946,172,2.434,173,1.724,175,1.413,181,1.612,195,2.064,203,1.123,205,1.612,216,1.331,263,2.73,318,1.547,339,1.413,403,2.356,404,1.725,407,2.882,413,1.725,419,1.853,425,1.123,427,1.123,459,1.302,460,1.302,461,1.547,466,3.244,477,2.375,502,2.17,504,1.999,509,1.999,532,2.632,538,2.632,544,1.714,545,1.714,547,1.714,550,1.938,551,1.938,553,1.547,554,1.714,555,1.714,556,1.714,557,1.714,558,3.204,561,3.204,565,1.714,580,1.938,583,2.964,585,1.999,587,2.632,588,1.938,601,1.938,602,2.278,603,2.278,604,2.278,605,2.278,606,2.278,607,2.278,608,2.278,609,4.257,610,2.278,611,2.278,612,2.278,613,2.278,614,2.278,615,2.278,616,2.278]],["title/classes/UpdateOrderDto.html",[31,0.161,417,2.171]],["body/classes/UpdateOrderDto.html",[3,0.265,4,0.231,5,0.231,7,0.534,12,1.5,13,0.023,14,0.668,18,0.622,22,0.47,28,1.256,30,0.265,31,0.258,41,0.018,42,0.018,77,1.243,79,3.781,185,1.256,187,3.347,188,1.777,196,2.265,199,2.759,200,2.759,209,2.759,212,3.197,215,2.194,219,1.801,417,3.47,617,4.758,618,5.592,619,5.592,620,4.447]],["title/classes/UpdateProductDto.html",[31,0.161,510,2.171]],["body/classes/UpdateProductDto.html",[3,0.3,4,0.261,5,0.261,13,0.022,22,0.506,28,1.417,30,0.3,31,0.232,41,0.019,42,0.019,185,1.417,216,1.911,217,3.409,222,3.409,240,2.87,358,3.115,510,3.738,621,4.271,622,3.778,623,5.021]],["title/classes/UpdateTableDto.html",[31,0.161,583,2.171]],["body/classes/UpdateTableDto.html",[3,0.3,4,0.261,5,0.261,13,0.022,22,0.506,28,1.417,30,0.3,31,0.232,41,0.019,42,0.019,185,1.417,216,1.911,263,2.87,265,3.778,358,3.115,583,3.738,587,3.778,622,3.778,624,4.271,625,5.021]],["title/classes/UpdateUserDto.html",[31,0.161,626,2.171]],["body/classes/UpdateUserDto.html",[3,0.3,4,0.261,5,0.261,13,0.022,22,0.506,28,1.417,30,0.3,31,0.232,41,0.019,42,0.019,185,1.417,216,1.911,268,2.87,270,3.778,358,3.115,622,3.778,626,3.738,627,4.271,628,3.778,629,5.021]],["title/classes/User.html",[31,0.161,100,1.112]],["body/classes/User.html",[3,0.223,4,0.194,5,0.194,7,0.449,13,0.022,14,1.017,17,1.411,18,0.947,19,1.615,30,0.223,31,0.173,41,0.016,42,0.016,77,1.56,100,1.588,167,2.983,168,3.493,169,3.493,185,1.056,188,1.588,195,1.899,242,3.218,272,4.236,387,3.493,388,3.493,389,4.08,630,3.182,631,3.741,632,3.741,633,3.741,634,3.741,635,3.741,636,3.741,637,3.741,638,3.741,639,3.741]],["title/controllers/UserController.html",[0,1.253,640,2.376]],["body/controllers/UserController.html",[0,0.911,2,0.911,3,0.152,4,0.132,5,0.132,7,0.305,8,1.209,12,1.825,13,0.023,14,0.813,16,1.606,17,1.267,18,0.707,19,1.267,21,1.62,22,0.477,23,0.499,27,1.454,28,0.718,30,0.152,31,0.117,32,0.968,33,0.968,39,1.705,41,0.012,42,0.012,77,1.374,89,1.579,100,1.965,104,2.36,105,1.728,106,1.579,107,2.36,108,1.579,111,3.357,112,3.522,117,1.579,118,1.03,126,3.357,129,3.136,173,1.54,176,2.36,181,2.493,195,2.183,216,1.924,268,3.245,324,1.728,403,2.493,404,1.876,408,1.728,413,1.255,419,2.678,421,1.728,422,1.728,425,1.255,427,1.255,432,1.728,433,1.728,437,1.728,504,1.454,509,1.454,518,1.915,520,1.915,522,1.915,523,1.915,524,1.915,626,3.753,628,2.862,640,2.583,641,2.165,642,2.544,643,2.544,644,2.544,645,2.544,646,2.544,647,3.804,648,2.544,649,2.544,650,2.544,651,2.544,652,2.544,653,2.604,654,2.165,655,2.544,656,2.544,657,2.544,658,2.544,659,2.544,660,2.544,661,2.544]],["title/modules/UserModule.html",[43,1.112,60,2.171]],["body/modules/UserModule.html",[2,1.869,3,0.238,4,0.208,5,0.208,13,0.023,22,0.538,23,0.783,30,0.238,31,0.184,41,0.017,42,0.017,43,1.847,45,1.723,46,1.723,47,1.969,48,1.969,49,1.723,50,2.867,51,1.969,57,2.832,60,4.206,61,2.574,62,1.969,63,1.969,65,2.983,118,1.617,138,2.477,141,2.477,144,2.477,145,2.477,146,1.969,640,3.947,653,3.751,654,3.396,662,3.396,663,3.992,664,3.396,665,3.992,666,3.992]],["title/injectables/UserService.html",[73,0.988,653,2]],["body/injectables/UserService.html",[3,0.112,4,0.097,5,0.097,7,0.225,8,0.953,13,0.023,14,0.822,16,1.592,17,1.371,18,0.736,19,1.256,21,1.5,22,0.442,23,0.368,30,0.112,31,0.086,32,0.713,33,0.713,35,1.977,39,1.583,41,0.01,42,0.01,73,0.847,74,0.863,77,1.337,98,3.306,100,1.193,154,3.584,155,1.071,156,1.071,157,1.633,160,1.715,163,2.258,164,0.993,166,2.824,167,1.59,168,1.862,169,2.329,170,3.008,171,1.41,172,2.684,173,1.901,175,1.162,181,1.977,188,0.953,195,2.029,216,1.142,221,4.661,242,1.715,268,2.453,272,2.258,318,1.272,339,1.162,364,3.651,367,2.553,387,1.862,388,1.862,403,2.117,404,1.48,407,2.654,413,1.48,419,1.59,425,0.924,427,0.924,459,1.071,460,1.071,461,1.272,464,3.651,466,2.914,477,2.037,502,1.862,504,1.715,509,1.715,532,2.258,538,2.258,544,1.41,545,1.41,547,1.41,553,1.272,554,1.41,555,1.41,556,1.41,557,1.41,558,2.824,561,2.824,565,1.41,626,2.662,628,2.258,653,1.715,667,1.594,668,3.753,669,1.873,670,1.873,671,1.873,672,1.873,673,1.873,674,1.873,675,1.873,676,1.873,677,1.594,678,1.594,679,1.873,680,1.873,681,1.873,682,3.753,683,1.873,684,4.291,685,1.873,686,1.873,687,3.753,688,4.291,689,3,690,3,691,1.873,692,3,693,1.873,694,3,695,1.873,696,1.873,697,1.873]],["title/coverage.html",[698,3.595]],["body/coverage.html",[0,2.062,1,1.797,5,0.138,6,2.251,13,0.023,18,0.37,25,1.512,31,0.312,41,0.013,42,0.013,49,1.142,73,1.727,75,2.251,87,1.797,88,2.251,94,1.641,100,0.841,109,1.512,114,1.641,120,1.797,135,1.641,153,2.251,157,1.007,173,1.071,184,1.641,186,2.946,187,2.946,191,1.797,196,1.586,205,1.804,222,3.165,230,1.219,240,1.512,241,2.251,263,1.512,264,2.251,265,2.946,268,1.512,269,2.251,270,2.946,314,1.991,315,2.251,347,2.251,368,2.251,380,2.251,381,2.251,386,2.251,400,1.797,401,2.946,417,1.641,423,1.512,428,1.991,440,3.508,441,1.991,450,2.251,459,1.512,460,1.512,484,2.251,489,2.251,499,1.797,500,2.251,510,1.641,512,1.512,531,2.251,553,4.851,570,2.251,575,1.797,576,2.251,583,1.641,585,1.512,601,2.251,617,2.251,621,2.251,624,2.251,626,1.641,627,2.251,630,2.251,640,1.797,641,2.251,653,1.512,667,2.251,698,1.991,699,2.646,700,2.646,701,2.646,702,5.759,703,5.152,704,4.662,705,2.251,706,2.646,707,5.959,708,2.251,709,4.662,710,3.916,711,5.152,712,2.646,713,3.916,714,3.916,715,2.251,716,2.646]],["title/dependencies.html",[46,1.816,717,2.484]],["body/dependencies.html",[13,0.023,23,0.846,24,4.665,28,1.217,31,0.253,41,0.018,42,0.018,46,1.861,85,3.668,118,1.746,146,2.127,163,3.244,165,3.668,215,2.127,218,3.668,356,5.13,458,3.244,718,6.03,719,4.312,720,4.312,721,4.312,722,4.312,723,4.312,724,4.312,725,4.312,726,4.312,727,4.312,728,4.312,729,4.312,730,4.312,731,4.312,732,4.312,733,4.312,734,4.312,735,4.312,736,4.312,737,4.312,738,4.312,739,4.312,740,4.312]],["title/miscellaneous/functions.html",[741,1.983,742,3.58]],["body/miscellaneous/functions.html",[7,0.575,13,0.022,16,1.521,17,1.2,18,0.669,19,1.2,21,1.753,41,0.019,42,0.019,49,2.729,197,4.072,339,3.923,401,3.602,440,3.602,441,4.758,459,3.346,460,2.736,708,4.072,715,4.98,741,3.25,742,4.072,743,4.787,744,4.787,745,4.787,746,4.787]],["title/index.html",[7,0.351,747,2.92,748,2.92]],["body/index.html",[4,0.2,13,0.023,41,0.016,42,0.016,81,3.28,219,1.561,698,2.901,749,3.855,750,3.855,751,5.1,752,3.855,753,3.855,754,3.855,755,3.855,756,3.855,757,3.855,758,5.715,759,3.855,760,3.855,761,3.855,762,3.855,763,6.628,764,3.855,765,3.855,766,3.855,767,6.498,768,3.855,769,3.855,770,5.1,771,3.855,772,3.855,773,3.855,774,3.855,775,5.1,776,5.1,777,3.855,778,3.855,779,3.855,780,5.1,781,5.1,782,3.855,783,3.855,784,3.855,785,3.855,786,3.28,787,3.855,788,3.855,789,3.855,790,3.855,791,3.855,792,3.855,793,3.855,794,3.855,795,3.855,796,3.855,797,3.28,798,3.855,799,3.855,800,3.855,801,3.855,802,3.855,803,3.855,804,3.28]],["title/modules.html",[45,2.062]],["body/modules.html",[13,0.019,41,0.019,42,0.019,44,3.237,45,2.057,55,2.957,56,2.957,57,2.057,58,2.957,59,2.957,60,2.957,786,5.917,805,6.955,806,6.955,807,6.955]],["title/overview.html",[808,4.065]],["body/overview.html",[2,1.159,13,0.023,25,2.985,41,0.014,42,0.014,43,1.029,44,4.722,45,1.397,46,1.397,47,1.597,48,1.597,49,1.397,50,1.597,51,1.597,52,2.754,53,2.754,54,2.754,55,4.072,56,3.928,57,2.9,58,3.928,59,3.928,60,3.928,61,2.233,62,1.597,63,1.597,74,1.491,109,2.985,132,2.754,134,2.754,135,3.24,157,2.41,185,0.914,423,2.985,445,2.754,447,2.754,479,2.754,480,2.754,481,2.754,512,2.985,526,2.754,527,2.754,585,2.985,596,2.754,597,2.754,653,2.985,662,2.754,664,2.754,808,2.754,809,3.237,810,3.237,811,3.237,812,3.237]],["title/properties.html",[188,1.337,717,2.484]],["body/properties.html",[13,0.022,41,0.02,42,0.02,188,1.693,219,2.158,797,4.533,804,4.533,813,5.329,814,5.329,815,5.329]],["title/miscellaneous/variables.html",[741,1.983,816,3.58]],["body/miscellaneous/variables.html",[7,0.587,11,3.68,13,0.023,35,2.732,39,1.649,41,0.019,42,0.019,100,1.884,120,4.027,179,3.68,181,2.253,327,4.161,428,3.68,677,4.161,678,4.161,705,5.045,741,3.321,816,4.161,817,4.89,818,4.89,819,4.89,820,4.89,821,4.89]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":553,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":814,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["1.0.0",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":692,"title":{},"body":{"injectables/UserService.html":{}}}],["10.0.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":812,"title":{},"body":{"overview.html":{}}}],["2",{"_index":238,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["2})@ispositive()@apiproperty({description",{"_index":255,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3feefa82",{"_index":231,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["4.0.1",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["4134",{"_index":233,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5.0.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["5.99",{"_index":256,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["574e",{"_index":232,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5h",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["6",{"_index":810,"title":{},"body":{"overview.html":{}}}],["7",{"_index":809,"title":{},"body":{"overview.html":{}}}],["7.1.8",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":811,"title":{},"body":{"overview.html":{}}}],["9633",{"_index":234,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["abcd@1234",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["add",{"_index":226,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["admin",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["alves",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":787,"title":{},"body":{"index.html":{}}}],["api",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["api/orders",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{}}}],["api/product",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{}}}],["api/tables",{"_index":577,"title":{},"body":{"controllers/TableController.html":{}}}],["apibearerauth",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateOrderDto.html":{}}}],["apiproperty({description",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('orders",{"_index":429,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('products",{"_index":514,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('tables",{"_index":589,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('users",{"_index":655,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":765,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":757,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":44,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":321,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["array",{"_index":194,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["asc",{"_index":551,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{}}}],["async",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["auth.controller",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":87,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["authenticated'})@apibearerauth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authguards",{"_index":441,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authmodule",{"_index":55,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":797,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":109,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":259,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/LoginResponseDto.html":{}}}],["await",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":788,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('password",{"_index":689,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcrypt",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":695,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":691,"title":{},"body":{"injectables/UserService.html":{}}}],["bf7b5e170d12",{"_index":235,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["body",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":807,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":805,"title":{},"body":{"modules.html":{}}}],["building",{"_index":752,"title":{},"body":{"index.html":{}}}],["catch",{"_index":318,"title":{},"body":{"classes/ErrorMiddleware.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":319,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["catch(handleerror",{"_index":477,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["class",{"_index":31,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":185,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":445,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":446,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":447,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":479,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":481,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":480,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":526,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":528,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":527,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":596,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":598,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":597,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":662,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":663,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":664,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["completed",{"_index":619,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["confirm",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":468,"title":{},"body":{"injectables/OrderService.html":{}}}],["console.error(exception",{"_index":341,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["const",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api/orders",{"_index":430,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('api/product",{"_index":515,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('api/tables",{"_index":590,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('auth",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('user",{"_index":656,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":698,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":518,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":435,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createuserdto",{"_index":642,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":452,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":387,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":470,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":184,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderproductdto",{"_index":191,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.note",{"_index":474,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":472,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":473,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":240,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":263,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":268,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ctx",{"_index":327,"title":{},"body":{"classes/ErrorMiddleware.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":331,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["ctx.getresponse",{"_index":330,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":466,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":694,"title":{},"body":{"injectables/UserService.html":{}}}],["data.slug",{"_index":562,"title":{},"body":{"injectables/ProductService.html":{}}}],["date",{"_index":389,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":344,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["declarations",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateOrderDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":677,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":522,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":505,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["delete(':id')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":644,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":524,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":46,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"classes/UpdateOrderDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":766,"title":{},"body":{"index.html":{}}}],["docs",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["dont",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["dto",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":688,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":687,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.products.map((createorderproductdto",{"_index":471,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto.status",{"_index":475,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto.tablenumber",{"_index":469,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto/create",{"_index":425,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":427,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":777,"title":{},"body":{"index.html":{}}}],["each",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["efficient",{"_index":753,"title":{},"body":{"index.html":{}}}],["email",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["entities/order.entity",{"_index":462,"title":{},"body":{"injectables/OrderService.html":{}}}],["entities/product.entity",{"_index":546,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/table.entity",{"_index":588,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["erro",{"_index":336,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["error",{"_index":339,"title":{},"body":{"classes/ErrorMiddleware.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["error('function",{"_index":443,"title":{},"body":{"controllers/OrderController.html":{}}}],["error.util",{"_index":461,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["errormiddleware",{"_index":314,"title":{"classes/ErrorMiddleware.html":{}},"body":{"classes/ErrorMiddleware.html":{},"coverage.html":{}}}],["example",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateOrderDto.html":{}}}],["exception",{"_index":323,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["exception.getresponse",{"_index":335,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["exception.getstatus",{"_index":333,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["exception.message",{"_index":340,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["exceptionfilter",{"_index":317,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["executioncontext",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyj1c2vybmftzsi6inroawfndwluag8taw1iyxjpzsisimlhdci6mty5mzm4otm4ncwizxhwijoxnjkznda3mzg0fq.xrruxbezptezv1vng3s2ucjq3tyq1kiclzhcykwuptw",{"_index":383,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["false",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["fieldsuserselected",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":403,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":404,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":433,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":413,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["format",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["format'})@apiproperty({description",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["format'})@isoptional()@apiproperty({description",{"_index":370,"title":{},"body":{"classes/LoginDto.html":{}}}],["formatslug",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["formatslug(name",{"_index":541,"title":{},"body":{"injectables/ProductService.html":{}}}],["found",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":751,"title":{},"body":{"index.html":{}}}],["function",{"_index":440,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":742,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":258,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["generation",{"_index":382,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":432,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":414,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":649,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":646,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":747,"title":{"index.html":{}},"body":{}}],["grow",{"_index":783,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":459,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["harumaki",{"_index":250,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["here",{"_index":794,"title":{},"body":{"index.html":{}}}],["host",{"_index":320,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["host.switchtohttp",{"_index":328,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["http://localhost:3454/api",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["httpcode",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":523,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":325,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["https://avatars.githubusercontent.com/u/97460632?v=4",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":247,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["https://nestjs.com",{"_index":801,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorMiddleware.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpstatus.internal_server_error",{"_index":334,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["id",{"_index":195,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":242,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["imbarie",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["implemented",{"_index":444,"title":{},"body":{"controllers/OrderController.html":{}}}],["implements",{"_index":316,"title":{},"body":{"classes/ErrorMiddleware.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["import(\"@nestjs/common\").canactivate",{"_index":442,"title":{},"body":{"controllers/OrderController.html":{}}}],["imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":762,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":764,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":332,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["interno",{"_index":337,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["invalid",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemail",{"_index":377,"title":{},"body":{"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":378,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":261,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":251,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":254,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":379,"title":{},"body":{"classes/LoginDto.html":{}}}],["ispositive",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isstring()@apiproperty({description",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isstring()@isemail",{"_index":369,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":372,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isoptional()@apiproperty({description",{"_index":374,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@matches(/^[\\w",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":229,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["join",{"_index":790,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":135,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":798,"title":{},"body":{"index.html":{}}}],["legend",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":804,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":781,"title":{},"body":{"index.html":{}}}],["literal",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["little",{"_index":245,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["local",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["login(@body",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":94,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":114,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["matches",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[\\w",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mathces",{"_index":690,"title":{},"body":{"injectables/UserService.html":{}}}],["maxdecimalplaces",{"_index":262,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["message",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"classes/LoginDto.html":{}}}],["metadata",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":741,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":780,"title":{},"body":{"index.html":{}}}],["mode",{"_index":770,"title":{},"body":{"index.html":{}}}],["module",{"_index":43,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":45,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":556,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["more",{"_index":793,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":799,"title":{},"body":{"index.html":{}}}],["n",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["name",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name.replace(/\\s+/g",{"_index":568,"title":{},"body":{"injectables/ProductService.html":{}}}],["nest",{"_index":758,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":803,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/jwt/dist",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["nestjs/mapped",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport/dist",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["nestjs/platform",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/swagger/dist",{"_index":267,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["new",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["nick",{"_index":375,"title":{},"body":{"classes/LoginDto.html":{}}}],["nickname",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["node.js",{"_index":750,"title":{},"body":{"index.html":{}}}],["note",{"_index":223,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["notfoundexception",{"_index":545,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('nothing",{"_index":554,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`product",{"_index":560,"title":{},"body":{"injectables/ProductService.html":{}}}],["notfoundexception(`table",{"_index":613,"title":{},"body":{"injectables/TableService.html":{}}}],["notfoundexception(`user",{"_index":686,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":393,"title":{},"body":{"classes/Order.html":{}}}],["number",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"injectables/TableService.html":{}}}],["object",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":486,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":782,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":196,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.controller",{"_index":449,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":426,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":187,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:10",{"_index":620,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["order.dto.ts:14",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:22",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:29",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":424,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["orderby",{"_index":550,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{}}}],["ordercontroller",{"_index":400,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":56,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{}}}],["orderservice",{"_index":423,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":808,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":717,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":422,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":565,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":622,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":623,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":625,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":629,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":421,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":437,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":418,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["patch(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":651,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":345,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["payload",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["photo",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["please",{"_index":791,"title":{},"body":{"index.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":243,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{}}}],["prisma",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["prisma.ordercreateinput",{"_index":467,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.service",{"_index":483,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":458,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":485,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":57,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":157,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":230,"title":{"classes/Product.html":{}},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product.controller",{"_index":530,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":222,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":236,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":260,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:19",{"_index":239,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:25",{"_index":246,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:26",{"_index":228,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:35",{"_index":257,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:43",{"_index":253,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:50",{"_index":248,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":513,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":499,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productcreated",{"_index":548,"title":{},"body":{"injectables/ProductService.html":{}}}],["productcreated.length",{"_index":552,"title":{},"body":{"injectables/ProductService.html":{}}}],["productid",{"_index":224,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":772,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":58,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":189,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{}}}],["productservice",{"_index":512,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{}}}],["profile(@loggeduser",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":749,"title":{},"body":{"index.html":{}}}],["project",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["promise",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":188,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["quantity",{"_index":225,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["quatity",{"_index":237,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["read",{"_index":792,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["received",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["record",{"_index":558,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":555,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["registred",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["repository",{"_index":761,"title":{},"body":{"index.html":{}}}],["req",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"classes/ErrorMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.url",{"_index":346,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["request.user",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":329,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["response.dto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":381,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":385,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":384,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.status(status).json",{"_index":342,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["results",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["run",{"_index":767,"title":{},"body":{"index.html":{}}}],["running",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["salmon",{"_index":227,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["scalable",{"_index":754,"title":{},"body":{"index.html":{}}}],["secret",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":464,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["server",{"_index":755,"title":{},"body":{"index.html":{}}}],["servidor",{"_index":338,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["show",{"_index":252,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["side",{"_index":756,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["slug",{"_index":244,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":785,"title":{},"body":{"index.html":{}}}],["src/.../handle",{"_index":745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.controller.ts",{"_index":743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:13",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":380,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":368,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":376,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:21",{"_index":371,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:29",{"_index":373,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":428,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/error.middleware.ts",{"_index":315,"title":{},"body":{"classes/ErrorMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/error.middleware.ts:7",{"_index":322,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["src/order/dto/create",{"_index":186,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":617,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":386,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":390,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":396,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:12",{"_index":392,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":391,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":394,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":397,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":395,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/order.controller.ts:22",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:30",{"_index":415,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:38",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:46",{"_index":420,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":448,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":450,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:10",{"_index":451,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:13",{"_index":455,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:136",{"_index":457,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:45",{"_index":456,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:79",{"_index":453,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":482,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":484,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":487,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product/dto/create",{"_index":241,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":621,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":398,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":489,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:10",{"_index":498,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":492,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":494,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":497,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":491,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":496,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":495,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":493,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:9",{"_index":490,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:19",{"_index":507,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:27",{"_index":508,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:35",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:43",{"_index":511,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":506,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":529,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:31",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:41",{"_index":540,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:45",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:54",{"_index":543,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:65",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:70",{"_index":542,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":264,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":624,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity",{"_index":399,"title":{},"body":{"classes/Order.html":{}}}],["src/table/entities/table.entity.ts",{"_index":570,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:2",{"_index":572,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:3",{"_index":573,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:4",{"_index":571,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:5",{"_index":574,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":576,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:20",{"_index":581,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:28",{"_index":582,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:36",{"_index":578,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:44",{"_index":584,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:53",{"_index":579,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":599,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":601,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":605,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:31",{"_index":606,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:41",{"_index":607,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:45",{"_index":603,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:52",{"_index":608,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:63",{"_index":604,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":602,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":627,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":630,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":637,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":633,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":635,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":639,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":632,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":636,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":638,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":634,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":631,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":641,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:19",{"_index":648,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":650,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":643,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:47",{"_index":652,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":645,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":665,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":667,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:102",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:13",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:43",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:56",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:60",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:79",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":460,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":768,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":771,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":773,"title":{},"body":{"index.html":{}}}],["started",{"_index":748,"title":{"index.html":{}},"body":{}}],["starter",{"_index":760,"title":{},"body":{"index.html":{}}}],["statements",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderDto.html":{},"classes/ErrorMiddleware.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{}}}],["stay",{"_index":795,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":786,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":806,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["table",{"_index":205,"title":{"classes/Table.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{}}}],["table.controller",{"_index":600,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":587,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":265,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:12",{"_index":266,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":586,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table/table.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":575,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablecreated",{"_index":609,"title":{},"body":{"injectables/TableService.html":{}}}],["tablecreated.length",{"_index":611,"title":{},"body":{"injectables/TableService.html":{}}}],["tablemodule",{"_index":59,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":190,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":580,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["tableservice",{"_index":585,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":776,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":779,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":778,"title":{},"body":{"index.html":{}}}],["tests",{"_index":775,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":784,"title":{},"body":{"index.html":{}}}],["thiago",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["thiaguinho",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["thiaguinho.imabarie@outlook.com",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["this.$connect",{"_index":488,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.fieldsuserselected",{"_index":684,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findbyid(id",{"_index":561,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.formatslug(data.name",{"_index":563,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.jwtservice.sign",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":436,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":431,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":434,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.updateorderstatus(id",{"_index":439,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order.create",{"_index":476,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":463,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":465,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.update",{"_index":478,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product.create",{"_index":564,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":567,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":549,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":559,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.update",{"_index":566,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table.create",{"_index":614,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":616,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":610,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":612,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.update",{"_index":615,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user.create",{"_index":693,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":697,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":683,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":696,"title":{},"body":{"injectables/UserService.html":{}}}],["this.productservice.create(dto",{"_index":519,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":525,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":516,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":517,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":521,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":593,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":595,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":591,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":592,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":594,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userservice.create(createuserdto",{"_index":659,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":661,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":657,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":658,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":660,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":343,"title":{},"body":{"classes/ErrorMiddleware.html":{}}}],["token",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["tolowercase",{"_index":569,"title":{},"body":{"injectables/ProductService.html":{}}}],["touch",{"_index":796,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":193,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["try",{"_index":547,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["twitter",{"_index":802,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":759,"title":{},"body":{"index.html":{}}}],["ui",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":197,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["unique",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["unit",{"_index":774,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":326,"title":{},"body":{"classes/ErrorMiddleware.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":815,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":544,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["unprocessableentityexception(error",{"_index":557,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["update",{"_index":419,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":520,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":509,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateat",{"_index":388,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":618,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["updateorderdto",{"_index":417,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updateorderstatus",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["updateorderstatus(@param('id",{"_index":438,"title":{},"body":{"controllers/OrderController.html":{}}}],["updateorderstatus(id",{"_index":416,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["updateproductdto",{"_index":510,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":583,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":626,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useguards",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":100,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":666,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":628,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:39",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:59",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":654,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":640,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreated",{"_index":682,"title":{},"body":{"injectables/UserService.html":{}}}],["usercreated.length",{"_index":685,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":454,"title":{},"body":{"injectables/OrderService.html":{}}}],["userlevel",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":60,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["users",{"_index":647,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":653,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":192,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateOrderDto.html":{},"dependencies.html":{}}}],["value",{"_index":678,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":816,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegan",{"_index":249,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["version",{"_index":813,"title":{},"body":{"properties.html":{}}}],["void",{"_index":324,"title":{},"body":{"classes/ErrorMiddleware.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["w",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["watch",{"_index":769,"title":{},"body":{"index.html":{}}}],["weak",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["weak'})@apiproperty({description",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["website",{"_index":800,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":763,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":789,"title":{},"body":{"index.html":{}}}],["z",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z]{2,7",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Project running 🐱‍🏍🚀: \\n  http://localhost:3454/api for Swagger docs...',\n      docs: baseUrl + '/api'\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Authentication to login'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Return user authenticated'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post, Get, UseGuards } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { User } from 'src/user/entities/user.entity';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('Auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) { }\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Authentication to login'\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Return user authenticated'\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt/dist';\nimport { PassportModule } from '@nestjs/passport/dist';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '5h' }\n    })],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly prisma: PrismaService, private readonly jwtService: JwtService) { }\n\n  async login(loginDto: LoginDto): Promise {\n    const { username, email, password } = loginDto;\n\n    let user: User;\n\n    if (username) {\n      user = await this.prisma.user.findUnique({ where: { username } });\n    } else if (email) {\n      user = await this.prisma.user.findUnique({ where: { email } });\n    }\n\n    if (!user) {\n      throw new UnauthorizedException('User not found or not registred');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('User or password incorrect')\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ username }),\n      user\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                products\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Array with ID of the products in order', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Status of the order', example: 'Received'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Table number where is creating order', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsInt, IsPositive, IsString, IsUUID, ValidateNested } from \"class-validator\";\nimport { CreateOrderProductDto } from \"./create-order-product.dto\";\nimport { Type } from \"class-transformer\";\n\nexport class CreateOrderDto {\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Table number where is creating order',\n    example: 1\n  })\n  tableNumber: number;\n\n  @ValidateNested({ each: true })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Array with ID of the products in order',\n    type: [CreateOrderProductDto]\n  })\n  products: CreateOrderProductDto[];\n\n  @IsString()\n  @ApiProperty({\n    description: 'Status of the order',\n    example: 'Received'\n  })\n  status: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                note\n                            \n                            \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Add note of the order', example: 'Only Salmon'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Product Id', example: '3feefa82-574e-4134-9633-bf7b5e170d12'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quatity of products have in order', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsInt, IsPositive, IsString, IsUUID } from \"class-validator\";\n\nexport class CreateOrderProductDto {\n\n  @IsUUID()\n  @ApiProperty({\n    description: 'Product Id',\n    example: '3feefa82-574e-4134-9633-bf7b5e170d12'\n  })\n  productId: string\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quatity of products have in order',\n    example: 2\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Add note of the order',\n    example: 'Only Salmon'\n  })\n  note: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                order\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Description of the product', example: 'A little description about this product...'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Image of the product', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Name of the product', example: 'Vegan Harumaki'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'Order for show the product', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsPositive()@ApiProperty({description: 'Price of the product', example: 5.99})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Slug of the product generate automatic as name', example: 'vegan-harumaki'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsNumber, IsPositive, IsString } from \"class-validator\"\n\nexport class CreateProductDto {\n\n  @IsString()\n  @ApiProperty({\n    description: 'Name of the product',\n    example: 'Vegan Harumaki'\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Slug of the product generate automatic as name',\n    example: 'vegan-harumaki'\n  })\n  slug: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Description of the product',\n    example: 'A little description about this product...'\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2\n  })\n  @IsPositive()\n  @ApiProperty({\n    description: 'Price of the product',\n    example: 5.99\n  })\n  price: number;\n\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Order for show the product',\n    example: 1\n  })\n  order: number\n\n  @IsString()\n  @ApiProperty({\n    description: 'Image of the product',\n    example: 'https://i.imgur.com/hNE75Iw.png'\n  })\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'Number of the table', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsPositive } from \"class-validator\";\nimport { ApiProperty } from \"@nestjs/swagger/dist\";\n\nexport class CreateTableDto {\n\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Number of the table',\n    example: 1\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                userLevel\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Just confirm password', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Matches(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/, {message: 'Invalid email format'})@ApiProperty({description: 'Email of the user. Have be unique', example: 'thiaguinho.imabarie@outlook.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Profile photo of the user', example: 'https://avatars.githubusercontent.com/u/97460632?v=4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Name of the user', example: 'Thiago Alves'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password is weak'})@ApiProperty({description: 'Password of the user to login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'User level to login', example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nickname of the user. Have be unique', example: 'thiaguinho-imbarie'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { IsString, IsUrl, Matches, MinLength } from \"class-validator\"\n\nexport class CreateUserDto {\n\n  @IsString()\n  @ApiProperty({\n    description: 'Name of the user',\n    example: 'Thiago Alves'\n  })\n  name: string\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nickname of the user. Have be unique',\n    example: 'thiaguinho-imbarie'\n  })\n  username: string\n\n  @IsString()\n  @Matches(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/, {\n    message: 'Invalid email format'\n  })\n  @ApiProperty({\n    description: 'Email of the user. Have be unique',\n    example: 'thiaguinho.imabarie@outlook.com'\n  })\n  email: string\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password is weak'\n  })\n  @ApiProperty({\n    description: 'Password of the user to login',\n    example: 'Abcd@1234'\n  })\n  password: string\n\n  @ApiProperty({\n    description: 'Just confirm password',\n    example: 'Abcd@1234'\n  })\n  confirmPassword: string\n\n  @IsString()\n  @ApiProperty({\n    description: 'User level to login',\n    example: 'admin'\n  })\n  userLevel: string\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Profile photo of the user',\n    example: 'https://avatars.githubusercontent.com/u/97460632?v=4'\n  })\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorMiddleware.html":{"url":"classes/ErrorMiddleware.html","title":"class - ErrorMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/error.middleware.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/error.middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\n\n@Catch()\nexport class ErrorMiddleware implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    let message =\n      exception instanceof HttpException\n        ? exception.getResponse()\n        : 'Erro interno do servidor';\n\n    if (exception instanceof Error) {\n      message = exception.message || message;\n    }\n    console.error(exception);\n\n    response.status(status).json({\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      error: message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET\n    })\n  }\n\n  async validate(payload: { username: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { username: payload.username }\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'User is not found or is dont authenticated'\n      )\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail({}, {message: 'Invalid email format'})@IsOptional()@ApiProperty({description: 'Email of the user', example: 'thiaguinho.imabarie@outlook.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Password of the user', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'Nick of the user', example: 'thiaguinho-imbarie'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class LoginDto{\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'Nick of the user',\n    example: 'thiaguinho-imbarie'\n  })\n  username: string;\n\n  @IsString()\n  @IsEmail({}, {message: 'Invalid email format'})\n  @IsOptional()\n  @ApiProperty({\n    description: 'Email of the user',\n    example: 'thiaguinho.imabarie@outlook.com'\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Password of the user',\n    example: 'Abcd@1234'\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT with automatic generation', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRoaWFndWluaG8taW1iYXJpZSIsImlhdCI6MTY5MzM4OTM4NCwiZXhwIjoxNjkzNDA3Mzg0fQ.xRrUXBeZPtEZv1vNG3S2uCjQ3tyq1KIclzHCYkwuPtw'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User Auth'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { User } from \"src/user/entities/user.entity\";\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT with automatic generation',\n    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRoaWFndWluaG8taW1iYXJpZSIsImlhdCI6MTY5MzM4OTM4NCwiZXhwIjoxNjkzNDA3Mzg0fQ.xRrUXBeZPtEZv1vNG3S2uCjQ3tyq1KIclzHCYkwuPtw'\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'User Auth',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updateAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from \"src/product/entities/product.entity\"\nimport { Table } from \"src/table/entities/table.entity\"\nimport { User } from \"src/user/entities/user.entity\"\n\nexport class Order {\n  id?: string\n  status?: string | null\n  user?: User\n  table?: Table\n  createdAt?: Date\n  updateAt?: Date\n  products?: Product[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                updateOrderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, dto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new order'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all orders registred'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a order for id'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderStatus(id: string, dto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a order for id'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, UseGuards } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { UpdateOrderDto } from './dto/update-order.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n\n@ApiTags('Orders')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('api/orders')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) { }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Get all orders registred'\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Get a order for id'\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Create a new order'\n  })\n  create(@LoggedUser() user: User, @Body() dto: CreateOrderDto) {\n    return this.orderService.create(user.id, dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Update a order for id'\n  })\n  updateOrderStatus(@Param('id') id: string, @Body() dto: UpdateOrderDto) {\n    return this.orderService.updateOrderStatus(id, dto);\n  }\n}\nfunction AuthGuards(): Function | import(\"@nestjs/common\").CanActivate {\n  throw new Error('Function not implemented.');\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_imports\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                updateOrderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, dto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \nupdateOrderStatus(id: string, dto: UpdateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { UpdateOrderDto } from './dto/update-order.dto';\nimport { Order } from './entities/order.entity';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) { }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        status: true,\n        table: {\n          select: {\n            number: true\n          }\n        },\n        user: {\n          select: {\n            name: true\n          }\n        },\n        products: {\n          select: {\n            quantity: true,\n            note: true,\n            product: {\n              select: {\n                name: true,\n                image: true,\n                price: true\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      select: {\n        id: true,\n        status: true,\n        table: {\n          select: {\n            number: true\n          }\n        },\n        user: {\n          select: {\n            name: true,\n            username: true\n          }\n        },\n        products: {\n          select: {\n            quantity: true,\n            note: true,\n            product: {\n              select: {\n                name: true,\n                image: true,\n                price: true\n              }\n            }\n          }\n        }\n      }\n    })\n  }\n\n  create(userId: string, dto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: userId\n        }\n      },\n      table: {\n        connect: {\n          number: dto.tableNumber\n        }\n      },\n      products: {\n        createMany: {\n          data: dto.products.map((createOrderProductDto) => ({\n            productId: createOrderProductDto.productId,\n            quantity: createOrderProductDto.quantity,\n            note: createOrderProductDto.note\n          }))\n        }\n      },\n      status: dto.status,\n    };\n\n    return this.prisma.order.create({\n      data,\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true\n          }\n        },\n        user: {\n          select: {\n            name: true,\n            username: true\n          }\n        },\n        products: {\n          select: {\n            quantity: true,\n            note: true,\n            product: {\n              select: {\n                name: true,\n                image: true,\n                price: true\n              }\n            }\n          }\n        },\n        status: true\n      }\n    }).catch(handleError);\n  }\n\n  updateOrderStatus(id: string, dto: UpdateOrderDto) {\n    const data = { ...dto };\n\n    return this.prisma.order.update({\n      where: { id: id },\n      data,\n      select: {\n        id: true,\n        status: true,\n        table: {\n          select: {\n            number: true\n          }\n        },\n        products: {\n          select: {\n            product: {\n              select: {\n                name: true,\n                image: true,\n                price: true\n              }\n            }\n          }\n        },\n        user: {\n          select: {\n            name: true,\n            username: true\n          }\n        }\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                order\n                            \n                            \n                                price\n                            \n                            \n                                slug\n                            \n                            \n                                    Optional\n                                updateAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  slug: string;\n  description: string;\n  price: number;\n  order: number;\n  image: string;\n  createdAt?: Date;\n  updateAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new product'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete product for id'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all products registred'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a product for id'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a product for id'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Products')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('api/product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Get all products registred'\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Get a product for id'\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Create a new product'\n  })\n  create(@Body() dto: CreateProductDto) {\n    return this.productService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Update a product for id'\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateProductDto) {\n    return this.productService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Delete product for id'\n  })\n  delete(@Param('id') id: string) {\n    this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                findOne\n                            \n                            \n                                    Private\n                                formatSlug\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        formatSlug\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatSlug(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnprocessableEntityException, NotFoundException } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) { }\n\n  async findAll(): Promise {\n    try {\n      const productCreated = await this.prisma.product.findMany({\n        orderBy: {\n          order: 'asc'\n        }\n      });\n\n      if (!productCreated || productCreated.length === 0) {\n        throw new NotFoundException('Nothing product registered at the moment.');\n      }\n\n      return productCreated;\n    } catch (error) {\n      throw new UnprocessableEntityException(error);\n\n    }\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Product as ID '${id}' was not found`);\n    }\n\n    return record;\n  }\n\n  findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateProductDto): Promise {\n    const data: Product = { ...dto };\n\n    data.slug = this.formatSlug(data.name);\n\n    return this.prisma.product.create({ data }).catch(handleError);\n\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.product.update({\n      where: { id: id },\n      data\n    }).catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n    await this.prisma.product.delete({ where: { id } });\n  }\n\n  private formatSlug(name: string): string {\n    return name.replace(/\\s+/g, '-').toLowerCase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updateAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string;\n  number: number;\n  createdAt?: Date;\n  updateAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/tables\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new table'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete table for id'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all tables registred'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a table for id'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a table for id'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { TableService } from './table.service';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Table } from './entities/table.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Tables')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('api/tables')\nexport class TableController {\n  constructor(private readonly tableService: TableService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Get all tables registred'\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Get a table for id'\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Create a new table'\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Update a table for id'\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Delete table for id'\n  })\n  delete(@Param('id') id: string) {\n    this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TableModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TableService } from './table.service';\nimport { TableController } from './table.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TableController],\n  providers: [TableService]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnprocessableEntityException, NotFoundException } from '@nestjs/common';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) { }\n\n  async findAll(): Promise {\n    try {\n      const tableCreated = await this.prisma.table.findMany({\n        orderBy: {\n          number: 'asc'\n        }\n      });\n\n      if (!tableCreated || tableCreated.length === 0) {\n        throw new NotFoundException('Nothing tables registered at the moment.');\n      }\n\n      return tableCreated;\n    } catch (error) {\n      throw new UnprocessableEntityException(error);\n\n    }\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Table as ID '${id}' was not found`);\n    }\n\n    return record;\n  }\n\n  findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n\n    return this.prisma.table.create({ data }).catch(handleError);\n\n  }\n\n  async update(id: string, dto: UpdateTableDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.table.update({\n      where: { id: id },\n      data\n    }).catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n    await this.prisma.table.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Updated status of the order', example: 'Completed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/update-order.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString } from \"class-validator\";\n\nexport class UpdateOrderDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Updated status of the order',\n    example: 'Completed'\n  })\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updateAt\n                            \n                            \n                                userLevel\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  userLevel: string;\n  image: string;\n  createdAt?: Date;\n  updateAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new user'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete user for id'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Get all users registred'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Get a user for id'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Update a user for id'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Users')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) { }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Get all users registred'\n  })\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Get a user for id'\n  })\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Create a new user'\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Update a user for id'\n  })\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Delete user for id'\n  })\n  delete(@Param('id') id: string) {\n    this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fieldsUserSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fieldsUserSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    name: true,\n    username: true,\n    email: true,\n    password: false,\n    userLevel: false,\n    image: true,\n    createdAt: true,\n    updateAt: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException, UnprocessableEntityException } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly prisma: PrismaService) { }\n\n  private fieldsUserSelected = {\n    id: true,\n    name: true,\n    username: true,\n    email: true,\n    password: false,\n    userLevel: false,\n    image: true,\n    createdAt: true,\n    updateAt: true\n  };\n\n  async findAll(): Promise {\n    try {\n      const userCreated = await this.prisma.user.findMany({\n        select: this.fieldsUserSelected\n      });\n\n      if (!userCreated || userCreated.length === 0) {\n        throw new NotFoundException('Nothing user registered at the moment.');\n      }\n\n      return userCreated;\n\n    } catch (error) {\n      throw new UnprocessableEntityException(error);\n\n    }\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.fieldsUserSelected\n    });\n\n    if (!record) {\n      throw new NotFoundException(`User as ID '${id}' was not found`);\n    }\n\n    return record;\n  }\n\n  findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('Password dont mathces');\n    }\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10)\n    };\n\n    return this.prisma.user.create({\n      data,\n      select: this.fieldsUserSelected\n    }).catch(handleError);\n\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('Password dont mathces');\n      }\n    }\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user.update({\n      where: { id: id },\n      select: this.fieldsUserSelected,\n      data\n    }).catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/error.middleware.ts\n            \n            class\n            ErrorMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            function\n            AuthGuards\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.1\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.8\n        \n            @prisma/client : ^5.2.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthGuards   (src/.../order.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/order/order.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthGuards\n                        \n                    \n                \n            \n            \n                \nAuthGuards()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Function | \n\n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
